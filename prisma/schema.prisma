generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = "mysql://atul:Sil@1234@localhost:3306/timesheet_v2"
}

// Employee table
model Employee {
  EmployeeID        Int               @id @default(autoincrement())
  EmployeeCode      String            @default("")  
  FirstName         String
  LastName          String            @default("")  
  Email             String     
  Password          String
  Admin             Int
  EmployeeType      String            // Assuming "regular" or "manager"
  clientId          Int?              // Nullable field if applicable
  
  // Default Values
  DefaultHours      Float             @default(8)                 
  DefaultProject    String            @default("")  
  DefaultClient     String            @default("")  
  DefaultProjectId  String            @default("") 
  // Derived field for full name
  name              String            @map("concat(FirstName, ' ', LastName)")

  // Relationships
  Timesheets        Timesheet[]
  managingEmployees ManagerEmployee[] @relation("ManagerEmployees_manager")
  employeesManagedBy ManagerEmployee[] @relation("ManagerEmployees_employee")
  Tasks             Task[]
}

// Client table
model Client {
  ClientID      Int      @id @default(autoincrement())
  ClientName    String
  ContactPerson String
  ContactEmail  String

  // Relationships
  Projects Project[]
}

// Project table
model Project {
  ProjectID   Int      @id @default(autoincrement())
  ProjectName String
  ClientID    Int
   
  // Relationships
  Client     Client      @relation(fields: [ClientID], references: [ClientID])
  Timesheets Timesheet[]
  Tasks      Task[]
}

// Timesheet table
model Timesheet {
  TimesheetID       Int      @id @default(autoincrement())
  EmployeeID        Int
  ProjectID         Int
  Date              DateTime
  Status            String
  HoursWorked       Float
  Description       String
  RejectionComment  String  @default("")
  Comment           String  @default("")
  // Relationships
  Employee          Employee @relation(fields: [EmployeeID], references: [EmployeeID])
  Project           Project  @relation(fields: [ProjectID], references: [ProjectID])
}

// ManagerEmployee table
model ManagerEmployee {
  managerId         Int // Manager ID
  employeeId       Int // Employee ID

  // Relationships
  manager           Employee @relation("ManagerEmployees_manager", fields: [managerId], references: [EmployeeID])
  employee          Employee @relation("ManagerEmployees_employee", fields: [employeeId], references: [EmployeeID])
   
  // Composite primary key
  @@id([employeeId, managerId])
}

// Task table
model Task {
  TaskID            Int      @id @default(autoincrement())
  ProjectID         Int
  TaskName          String
  EmployeeID        Int
  Hours             Float
  TaskStatus        String   @default("todo")
  CreatedAt         DateTime @default(now()) 
  UpdatedAt         DateTime @updatedAt 
  Date              DateTime
  
  // Relationships
  Project           Project  @relation(fields: [ProjectID], references: [ProjectID])
  Employee          Employee @relation(fields: [EmployeeID], references: [EmployeeID])
}
